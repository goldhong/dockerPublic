centos(7.0) 上 crontab 计划任务

yum install vixie-cron
yum install crontabs
/bin/systemctl restart crond.service  #启动服务
/bin/systemctl reload  crond.service  #重新载入配置
/bin/systemctl status  crond.service  #查看crontab服务状态

补充：
1、crontab相关命令
功能说明：设置计时器。
语　　法：crontab [-u <用户名称>][配置文件] 或 crontab [-u <用户名称>][-elr]
补充说明：cron是一个常驻服务，它提供计时器的功能，让用户在特定的时间得以执行预设的指令或程序。只要用户会编辑计时器的配置文件，就可以使用计时器的功能。

配置文件格式：Minute Hour Day Month DayOFWeek Command

参　　数： 
-e 　编辑该用户的计时器设置。 
-l 　列出该用户的计时器设置。 
-r 　删除该用户的计时器设置。 
-u<用户名称> 　指定要设定计时器的用户名称。

 

2、crontab 配置文件格式

　　基本格式 :
　　*      * 　 *　  *　  *　　command
　　分　  时　 日　 月　 周　  命令

　　第1列表示分钟1～59 每分钟用*或者 */1表示
　　第2列表示小时1～23（0表示0点）
　　第3列表示日期1～31
　　第4列表示月份1～12
　　第5列标识号星期0～6（0表示星期天）
　　第6列要运行的命令

 除了数字还有几个个特殊的符号就是"*"、"/"和"-"、","，*代表所有的取值范围内的数字，"/"代表每的意思,"*/5"表示每5个单位，"-"代表从某个数字到某个数字,","分开几个离散的数字。


crontab文件的一些例子：
30 21 * * * /usr/local/etc/rc.d/apache restart  #每晚的21:30 重启apache 

45 4 1,10,22 * * /usr/local/etc/rc.d/apache restart  #每月1、10、22日的4 : 45重启apache 

10 1 * * 6,0 /usr/local/etc/rc.d/apache restart #每周六、周日的1 : 10重启apache  

0,30 18-23 * * * /usr/local/etc/rc.d/apache restart  #每天18 : 00至23 : 00之间每隔30分钟重启apache  

0 23 * * 6 /usr/local/etc/rc.d/apache restart  #每星期六的11 : 00 pm重启apache

* 23-7/1 * * * /usr/local/etc/rc.d/apache restart  #晚上11点到早上7点之间，每隔一小时重启  apache

* */1 * * * /usr/local/etc/rc.d/apache restart  #每一小时重启apache   

0 11 4 * mon-wed /usr/local/etc/rc.d/apache restart #每月的4号与每周一到周三的11点重启apache   

0 4 1 jan * /usr/local/etc/rc.d/apache restart  #一月一号的4点重启apache  

*/30 * * * * /usr/sbin/ntpdate 210.72.145.44  #每半小时同步一下时间 

0 */2 * * * www /usr/bin/somecommand  >>  /dev/null 2>&1 #以用户www的身份每两小时就运行某个程序：


3、其他任务调度
cron默认配置了调度任务，分别为：hourly、daily、weekly、mouthly，默认配置文件为/etc/anacrontab

将需要执行的脚本放到相应的目录下即可，目录分别为：

/etc/cron.hourly

/etc/cron.daily

/etc/cron.weekly

/ect/cron.mouthly


cron 的主配置文件是 /etc/crontab，它包括下面几行：
SHELL=/bin/bash
PATH=/sbin:/bin:/usr/sbin:/usr/bin
MAILTO=root
HOME=/
# run-parts
01 * * * * root run-parts /etc/cron.hourly
02 4 * * * root run-parts /etc/cron.daily
22 4 * * 0 root run-parts /etc/cron.weekly
42 4 1 * * root run-parts /etc/cron.monthly


4. 关于cron配置文件/etc/crontab

cron 的主配置文件是 /etc/crontab，它包括下面几行：
SHELL=/bin/bash
PATH=/sbin:/bin:/usr/sbin:/usr/bin
MAILTO=root
HOME=/
# run-parts
01 * * * * root run-parts /etc/cron.hourly
02 4 * * * root run-parts /etc/cron.daily
22 4 * * 0 root run-parts /etc/cron.weekly
42 4 1 * * root run-parts /etc/cron.monthly

前四行是用来配置 cron 任务运行环境的变量：

Shell 变量的值指定shell 环境（此处默认为 bash shell）；PATH 变量定义用来执行命令的程序路径；cron 任务的输出被邮寄给 MAILTO 变量定义的用户名，如果 MAILTO 变量被定义为空白字符串（MAILTO=""），电子邮件就不会被寄出；HOME 变量可以用来设置在执行命令或脚本时使用的主目录。如在 /etc/crontab 文件中run-parts部分所示，它使用 run-parts 脚本来执行存在于 /etc/cron.hourly、/etc/cron.daily、/etc/cron.weekly 和 /etc/cron.monthly 目录中的脚本，这些脚本被相应地按照预设时间在每小时、每日、每周、或每月执行。这些目录中的文件应该是 shell 脚本，并且具有可执行权限(chmod +x filename)。

如果某 cron 任务需要根据调度来执行，而不是每小时、每日、每周、或每月地执行，它可以被添加到/etc/cron.d目录中。该目录中的所有文件使用和 /etc/crontab 中一样的语法。

每次编辑完某个用户的cron设置后，cron自动在/var/spool/cron下生成一个与此用户同名的文件，此用户的cron信息都记录在这个文件中，这个文件是不可以直接编辑的，只可以用crontab -e 来编辑。cron启动后每过一份钟读一次这个文件，检查是否要执行里面的命令。因此此文件修改后不需要重新启动cron服务。

